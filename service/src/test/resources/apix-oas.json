{
  "_signature" : "eec9bfac-9b6c-4f4f-bf50-c25de33eb2d2",
  "basePath" : "/v2",
  "host" : "petstore.swagger.io",
  "info" : {
    "_signature" : "823e36b3-0cf9-4c9e-84c4-9a7643258548",
    "description" : "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version" : "1.0.0",
    "title" : "Swagger Petstore",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "sections" : {
    "store" : {
      "paths" : {
        "/store/inventory" : {
          "methods" : {
            "get" : {
              "_signature" : "fa2d472b-4d9d-454e-bccc-fbbf3e5d792f",
              "summary" : "Returns pet inventories by status",
              "description" : "Returns a map of status codes to quantities",
              "operationId" : "getInventory",
              "produces" : [
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            }
          },
          "description" : "",
          "_signature" : "15970879-1087-4dcb-b765-c8006054440f"
        },
        "/store/order" : {
          "methods" : {
            "post" : {
              "_signature" : "7ba65179-ab86-4797-8bb4-517d9245f20b",
              "summary" : "Place an order for a pet",
              "description" : "",
              "operationId" : "placeOrder",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "order placed for purchasing the pet",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "ref" : "#/definitions/5ca7e792-fc98-4b90-9a71-101779fe7154"
                }
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "ref" : "#/definitions/5ca7e792-fc98-4b90-9a71-101779fe7154"
                  }
                },
                "400" : {
                  "description" : "Invalid Order",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "b8f34c20-0eec-493d-a3c7-5315ae366abb"
        },
        "/store/order/{orderId}" : {
          "methods" : {
            "get" : {
              "_signature" : "c02390f4-e579-465e-85ea-4bd445b06702",
              "summary" : "Find purchase order by ID",
              "description" : "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
              "operationId" : "getOrderById",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "ref" : "#/definitions/5ca7e792-fc98-4b90-9a71-101779fe7154"
                  }
                },
                "400" : {
                  "description" : "Invalid ID supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "Order not found",
                  "required" : false
                }
              }
            },
            "delete" : {
              "_signature" : "af5a51b7-5c74-403a-94fa-620ff6151907",
              "summary" : "Delete purchase order by ID",
              "description" : "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
              "operationId" : "deleteOrder",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "400" : {
                  "description" : "Invalid ID supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "Order not found",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "pathVariables" : {
            "orderId" : {
              "type" : "integer",
              "description" : "ID of pet that needs to be fetched",
              "name" : "orderId",
              "in" : "path",
              "format" : "int64",
              "maximum" : 10,
              "minimum" : 1
            }
          },
          "_signature" : "85116b9c-ca5f-4512-96f7-fd004140a645"
        }
      },
      "_signature" : "7d3e6800-3308-4ec0-a7c0-ad35b1404af5",
      "info" : {
        "name" : "store",
        "description" : "Access to Petstore orders",
        "_signature" : "cfd9f6ec-ae62-4204-93c1-7c9f191bde97"
      }
    },
    "user" : {
      "paths" : {
        "/user/createWithList" : {
          "methods" : {
            "post" : {
              "_signature" : "6c073770-5769-4d6c-96ad-f5826e1c4ab5",
              "summary" : "Creates list of users with given input array",
              "description" : "",
              "operationId" : "createUsersWithListInput",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "List of user object",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "ref" : "#/definitions/e982911b-5f7d-49ae-aac0-4a468f1391e7"
                  }
                }
              },
              "responses" : {
                "default" : {
                  "description" : "successful operation",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "0e340f66-55d7-486d-a289-8ad11d6a24ec"
        },
        "/user/login" : {
          "methods" : {
            "get" : {
              "_signature" : "0fd9a1a4-d398-4f73-8255-069f5a6f608b",
              "summary" : "Logs user into the system",
              "description" : "",
              "operationId" : "loginUser",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {
                  "password" : {
                    "type" : "string",
                    "description" : "The password for login in clear text",
                    "name" : "password",
                    "in" : "query"
                  },
                  "username" : {
                    "type" : "string",
                    "description" : "The user name for login",
                    "name" : "username",
                    "in" : "query"
                  }
                },
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "headers" : {
                    "X-Rate-Limit" : {
                      "type" : "integer",
                      "description" : "calls per hour allowed by the user",
                      "format" : "int32"
                    },
                    "X-Expires-After" : {
                      "type" : "string",
                      "description" : "date in UTC when token expires",
                      "format" : "date-time"
                    }
                  },
                  "schema" : {
                    "type" : "string"
                  }
                },
                "400" : {
                  "description" : "Invalid username/password supplied",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "ac48d670-f409-4c46-9267-eef6bfa8fc86"
        },
        "/user" : {
          "methods" : {
            "post" : {
              "_signature" : "f31ea32d-dd45-478b-b651-0f469da5731f",
              "summary" : "Create user",
              "description" : "This can only be done by the logged in user.",
              "operationId" : "createUser",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "Created user object",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "ref" : "#/definitions/e982911b-5f7d-49ae-aac0-4a468f1391e7"
                }
              },
              "responses" : {
                "default" : {
                  "description" : "successful operation",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "44565041-0b7e-48c8-a822-2f1ebcae3853"
        },
        "/user/createWithArray" : {
          "methods" : {
            "post" : {
              "_signature" : "d4157e20-e89a-4ff8-a185-d6fc66f69838",
              "summary" : "Creates list of users with given input array",
              "description" : "",
              "operationId" : "createUsersWithArrayInput",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "List of user object",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "ref" : "#/definitions/e982911b-5f7d-49ae-aac0-4a468f1391e7"
                  }
                }
              },
              "responses" : {
                "default" : {
                  "description" : "successful operation",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "1dc09cdc-6aa2-4b72-9eaf-e585a590ab1f"
        },
        "/user/{username}" : {
          "methods" : {
            "get" : {
              "_signature" : "b9a9d33d-1a34-4c32-a233-cc0466fc9f8d",
              "summary" : "Get user by user name",
              "description" : "",
              "operationId" : "getUserByName",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "ref" : "#/definitions/e982911b-5f7d-49ae-aac0-4a468f1391e7"
                  }
                },
                "400" : {
                  "description" : "Invalid username supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "User not found",
                  "required" : false
                }
              }
            },
            "delete" : {
              "_signature" : "9eb5b5aa-24a2-4f72-928a-46468a680310",
              "summary" : "Delete user",
              "description" : "This can only be done by the logged in user.",
              "operationId" : "deleteUser",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "400" : {
                  "description" : "Invalid username supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "User not found",
                  "required" : false
                }
              }
            },
            "put" : {
              "_signature" : "13f6cef5-e9d0-4197-9732-88fcc9efe4c8",
              "summary" : "Updated user",
              "description" : "This can only be done by the logged in user.",
              "operationId" : "updateUser",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "Updated user object",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "ref" : "#/definitions/e982911b-5f7d-49ae-aac0-4a468f1391e7"
                }
              },
              "responses" : {
                "400" : {
                  "description" : "Invalid user supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "User not found",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "pathVariables" : {
            "username" : {
              "type" : "string",
              "description" : "The name that needs to be fetched. Use user1 for testing. ",
              "name" : "username",
              "in" : "path"
            }
          },
          "_signature" : "1a370c6d-a71d-4aa1-ad52-85b07fbb8555"
        },
        "/user/logout" : {
          "methods" : {
            "get" : {
              "_signature" : "262d8ff6-b82e-4e4f-9c5b-627834b94473",
              "summary" : "Logs out current logged in user session",
              "description" : "",
              "operationId" : "logoutUser",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "default" : {
                  "description" : "successful operation",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "fb71cb51-da4a-46e3-b661-98376a789f0b"
        }
      },
      "_signature" : "afb13103-ac48-4343-a1de-d39fce865e9e",
      "info" : {
        "name" : "user",
        "description" : "Operations about user",
        "_signature" : "9d91c003-55c0-4369-971e-cc2853d4ac48"
      }
    },
    "pet" : {
      "paths" : {
        "/pet/findByStatus" : {
          "methods" : {
            "get" : {
              "_signature" : "62042f50-29bf-4354-bdfb-92e069a4deb6",
              "summary" : "Finds Pets by status",
              "description" : "Multiple status values can be provided with comma separated strings",
              "operationId" : "findPetsByStatus",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {
                  "status" : {
                    "type" : "array",
                    "description" : "Status values that need to be considered for filter",
                    "name" : "status",
                    "in" : "query",
                    "collectionFormat" : "multi",
                    "items" : {
                      "type" : "string",
                      "enum" : [
                        "available",
                        "pending",
                        "sold"
                      ],
                      "default" : "available"
                    }
                  }
                },
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "ref" : "#/definitions/b85eaff2-ae79-4e76-af59-176738f62eec"
                    }
                  }
                },
                "400" : {
                  "description" : "Invalid status value",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "de65e6b7-5293-4abc-b503-0d9223147f60"
        },
        "/pet/{petId}/uploadImage" : {
          "methods" : {
            "post" : {
              "_signature" : "a2e6d02a-8d5b-411b-90ec-43ff75427f07",
              "summary" : "uploads an image",
              "description" : "",
              "operationId" : "uploadFile",
              "consumes" : [
                "multipart/form-data"
              ],
              "produces" : [
                "application/json"
              ],
              "request" : {
                "name" : "formData",
                "in" : "formData",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "file" : {
                      "type" : "file",
                      "description" : "file to upload",
                      "name" : "file"
                    },
                    "additionalMetadata" : {
                      "type" : "string",
                      "description" : "Additional data to pass to server",
                      "name" : "additionalMetadata"
                    }
                  }
                }
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "ref" : "#/definitions/f10dd269-c650-44fa-91b6-ffd570901c7e"
                  }
                }
              }
            }
          },
          "description" : "",
          "pathVariables" : {
            "petId" : {
              "type" : "integer",
              "description" : "ID of pet to update",
              "name" : "petId",
              "in" : "path",
              "format" : "int64"
            }
          },
          "_signature" : "060bade5-5d74-4be1-82a3-c9d223a1f3f5"
        },
        "/pet" : {
          "methods" : {
            "post" : {
              "_signature" : "bae5d755-842a-4bec-be54-8e565507f3fe",
              "summary" : "Add a new pet to the store",
              "description" : "",
              "operationId" : "addPet",
              "consumes" : [
                "application/json",
                "application/xml"
              ],
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "Pet object that needs to be added to the store",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "ref" : "#/definitions/b85eaff2-ae79-4e76-af59-176738f62eec"
                }
              },
              "responses" : {
                "405" : {
                  "description" : "Invalid input",
                  "required" : false
                }
              }
            },
            "put" : {
              "_signature" : "5a552272-4e36-4d5c-90d4-f71db5a8d41f",
              "summary" : "Update an existing pet",
              "description" : "",
              "operationId" : "updatePet",
              "consumes" : [
                "application/json",
                "application/xml"
              ],
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "body",
                "in" : "body",
                "description" : "Pet object that needs to be added to the store",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "ref" : "#/definitions/b85eaff2-ae79-4e76-af59-176738f62eec"
                }
              },
              "responses" : {
                "400" : {
                  "description" : "Invalid ID supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "Pet not found",
                  "required" : false
                },
                "405" : {
                  "description" : "Validation exception",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "558bff43-02e1-4627-ad67-02d8f7cbeb5f"
        },
        "/pet/findByTags" : {
          "methods" : {
            "get" : {
              "_signature" : "10ffb586-620c-4acb-8b92-a78c5eec2270",
              "summary" : "Finds Pets by tags",
              "description" : "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
              "operationId" : "findPetsByTags",
              "deprecated" : true,
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {
                  "tags" : {
                    "type" : "array",
                    "description" : "Tags to filter by",
                    "name" : "tags",
                    "in" : "query",
                    "collectionFormat" : "multi",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "ref" : "#/definitions/b85eaff2-ae79-4e76-af59-176738f62eec"
                    }
                  }
                },
                "400" : {
                  "description" : "Invalid tag value",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "_signature" : "9869dd16-62a3-4ea4-a5a2-c76f6f202e35"
        },
        "/pet/{petId}" : {
          "methods" : {
            "post" : {
              "_signature" : "0da554db-846a-48ca-864c-d3738202ccf0",
              "summary" : "Updates a pet in the store with form data",
              "description" : "",
              "operationId" : "updatePetWithForm",
              "consumes" : [
                "application/x-www-form-urlencoded"
              ],
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "name" : "formData",
                "in" : "formData",
                "required" : false,
                "queryParams" : {},
                "headers" : {},
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Updated name of the pet",
                      "name" : "name"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Updated status of the pet",
                      "name" : "status"
                    }
                  }
                }
              },
              "responses" : {
                "405" : {
                  "description" : "Invalid input",
                  "required" : false
                }
              }
            },
            "get" : {
              "_signature" : "3fd4b6e0-7d7a-4a36-8361-42ee0514a1f4",
              "summary" : "Find pet by ID",
              "description" : "Returns a single pet",
              "operationId" : "getPetById",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {}
              },
              "responses" : {
                "200" : {
                  "description" : "successful operation",
                  "required" : false,
                  "schema" : {
                    "ref" : "#/definitions/b85eaff2-ae79-4e76-af59-176738f62eec"
                  }
                },
                "400" : {
                  "description" : "Invalid ID supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "Pet not found",
                  "required" : false
                }
              }
            },
            "delete" : {
              "_signature" : "93697edd-86cf-4554-baaf-0bd9346a070a",
              "summary" : "Deletes a pet",
              "description" : "",
              "operationId" : "deletePet",
              "produces" : [
                "application/xml",
                "application/json"
              ],
              "request" : {
                "required" : false,
                "queryParams" : {},
                "headers" : {
                  "api_key" : {
                    "type" : "string",
                    "name" : "api_key",
                    "in" : "header"
                  }
                }
              },
              "responses" : {
                "400" : {
                  "description" : "Invalid ID supplied",
                  "required" : false
                },
                "404" : {
                  "description" : "Pet not found",
                  "required" : false
                }
              }
            }
          },
          "description" : "",
          "pathVariables" : {
            "petId" : {
              "type" : "integer",
              "description" : "ID of pet to return",
              "name" : "petId",
              "in" : "path",
              "format" : "int64"
            }
          },
          "_signature" : "1c0a1830-7212-4021-80ae-82f4733d2810"
        }
      },
      "_signature" : "4a542537-6889-4673-861f-ee819da2de8e",
      "info" : {
        "name" : "pet",
        "description" : "Everything about your Pets",
        "_signature" : "0555b755-fae2-4b50-ba7b-39a9884c9f15"
      }
    }
  },
  "definitions" : {
    "f10dd269-c650-44fa-91b6-ffd570901c7e" : {
      "_signature" : "813cbbef-0b74-4f47-9b7a-83d24377b01b",
      "name" : "ApiResponse",
      "schema" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      }
    },
    "e982911b-5f7d-49ae-aac0-4a468f1391e7" : {
      "_signature" : "aa180c66-ad45-44d3-a323-36ec9438d3f4",
      "name" : "User",
      "schema" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "userStatus" : {
            "type" : "integer",
            "description" : "User Status",
            "format" : "int32"
          },
          "phone" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "email" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "User"
        }
      }
    },
    "7a36fc66-4417-4eac-9e02-444721c4a9ce" : {
      "_signature" : "f9432b73-ab73-4e90-8c26-4c3282f1acec",
      "name" : "Category",
      "schema" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      }
    },
    "b85eaff2-ae79-4e76-af59-176738f62eec" : {
      "_signature" : "f4fd80ad-e8c0-474f-8ed7-09a1b7971090",
      "name" : "Pet",
      "schema" : {
        "type" : "object",
        "properties" : {
          "photoUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "xml" : {
              "name" : "photoUrl",
              "wrapped" : true
            }
          },
          "name" : {
            "type" : "string",
            "example" : "doggie"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "category" : {
            "ref" : "#/definitions/7a36fc66-4417-4eac-9e02-444721c4a9ce"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "ref" : "#/definitions/7e4fa958-54c6-4589-bb03-00e4d6277711"
            },
            "xml" : {
              "name" : "tag",
              "wrapped" : true
            }
          },
          "status" : {
            "type" : "string",
            "description" : "pet status in the store",
            "enum" : [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml" : {
          "name" : "Pet"
        }
      }
    },
    "5ca7e792-fc98-4b90-9a71-101779fe7154" : {
      "_signature" : "17325c97-4723-4c36-ab09-c9fdfd5dbaca",
      "name" : "Order",
      "schema" : {
        "type" : "object",
        "properties" : {
          "petId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "shipDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "complete" : {
            "type" : "boolean",
            "default" : false
          },
          "status" : {
            "type" : "string",
            "description" : "Order Status",
            "enum" : [
              "placed",
              "approved",
              "delivered"
            ]
          }
        },
        "xml" : {
          "name" : "Order"
        }
      }
    },
    "7e4fa958-54c6-4589-bb03-00e4d6277711" : {
      "_signature" : "efa7b45c-511e-48e4-a253-a8ae3e436239",
      "name" : "Tag",
      "schema" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "Tag"
        }
      }
    }
  },
  "securityDefinitions" : {
    "petstore_auth" : {
      "type" : "oauth2",
      "flow" : "implicit",
      "authorizationUrl" : "https://petstore.swagger.io/oauth/authorize",
      "scopes" : {
        "write:pets" : "modify pets in your account",
        "read:pets" : "read your pets"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}